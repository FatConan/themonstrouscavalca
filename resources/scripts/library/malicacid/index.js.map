{
  "version": 3,
  "sources": ["../src/classes/BaseClass.js", "../src/dom/ElementHelper.js", "../src/request/RequestParameters.js", "../src/events/BaseHighLevelEventHandler.js", "../src/events/ListenerCollection.js", "../src/events/NamespacedListenerCollection.js", "../src/events/HighLevelEventHandler.js", "../src/events/HighLevelKeyPressEventHandler.js", "../src/events/index.js", "../src/classes/ListeningClass.js", "../src/modal/ConfirmationModal.js", "../src/modal/templates/ConfirmationModalHTML.js", "../src/htmlhelpers/SortableTable.js", "../src/forms/FormHandler.js", "../src/forms/BasicForm.js", "../src/forms/FormHandlerWithGenerators.js", "../src/forms/BasicFormWithGenerators.js", "../src/dispatcher/Dispatcher.js", "../src/helpers.js", "../src/css/index.js", "../src/css.js", "../src/index.js"],
  "sourcesContent": ["import _ from \"underscore\";\nimport ElementHelper from \"../dom/ElementHelper.js\";\nimport RequestParameters from \"../request/RequestParameters.js\";\nimport {handler} from \"../events/index.js\";\n\n/*\nThe BaseClass is designed as a starting point for writing classes that might require common MalicAcid features such as\naccess to an eventListener, an element helper and tools for dealing with request parameters. It also has some cheap and\ncheerful methods for automatically pulling options into the class as attributes from the constructor.\n */\n\nexport default class BaseClass{\n    //A base class that can be extended that comes fitted with some helper methods for manipulating the dom and\n    //working with common features we find ourselves exploring.\n    constructor(options){\n        this.configure(options);\n        this.hookEventListener();\n        this.elementHelper = ElementHelper;\n        this.requestParameters = RequestParameters;\n    }\n\n    //Handle option management, override this in extending classes if required to set defaults etc,\n    //by default just do a straight assimilation\n    configure(options){\n        this.assimilate(options);\n    }\n\n    //Add options entries directly on to instance\n    assimilate(options){\n        _.extend(this, options);\n    }\n\n    //Add the eventHandler from window to the object so we can use it addListeners\n    hookEventListener(){\n        this.eventHandler = handler();\n    }\n}", "import \"jquery\";\n\nexport default class ElementHelper{\n    static guid(){\n        const s4 = () => {\n            return Math.floor((1 + Math.random()) * 0x10000)\n                .toString(16)\n                .substring(1);\n        }\n\n        return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\n            s4() + '-' + s4() + s4() + s4();\n    }\n\n    static namespacedGuid(ns){\n        return `${ns}-${ElementHelper.guid()}`;\n    }\n\n    static getData(element, dataLabel){\n        if(element !== null){\n            return $(element).data(dataLabel);\n        }\n        return null;\n    }\n\n    /**\n     * Legacy alias for findParentByTag\n     * @param element\n     * @param tagName\n     */\n    static findParentTag(element, tagName){\n        return ElementHelper.findParentByTag(element, tagName);\n    }\n\n    /**\n     * Find the first element tracking up the provided element's branch that matches the provided tag string\n     * @param element\n     * @param tagName\n     * @returns {*}\n     */\n    static findParentByTag(element, tagName){\n        while(element && element.tagName !== tagName.toUpperCase() && element.tagName !== null){\n            element = element.parentNode;\n        }\n        return element;\n    }\n\n    /**\n     * Find the first element tracking up the provided element's branch that matches the provided string\n     * @param element\n     * @param match\n     * @returns {null|{matches}|*}\n     */\n    static findParentByMatch(element, match){\n        while(element && element.tagName !== null){\n            if(element.matches && element.matches(match)){\n                return element;\n            }\n            element = element.parentNode;\n        }\n        return null;\n    }\n\n    /**\n     * Find all the elements tracking up the provided element's branch that match the provided string\n     * @param element The starting element\n     * @param match The string to match\n     * @param reversed boolean - determine of the matched array should return reversed\n     * @returns {*[]}\n     */\n    static finaAllParentsByMatch(element, match, reversed){\n        let parents = [];\n        while(element && element.tagName !== null){\n            if(element.matches && element.matches(match)){\n                parents.push(element);\n            }\n            element = element.parentNode;\n        }\n        if(reversed){\n            parents.reverse();\n        }\n        return parents;\n    }\n\n    /**\n     * This method is used when registering events and is used internally to track up from the target element to\n     * see if we catch an match and element in its branch. We wil then return that element and any registered event actions\n     * associated with it\n     * @param element - A DOM element\n     * @param matchObj - An event handler object\n     * @returns {*[][]|({matches}|*|string)[]}\n     */\n    static parentMatches(element, matchObj){\n        while(element && (element.tagName !== null || element === window)){\n            for(const [triggerElMatch, action] of matchObj.entries()){\n                if(element === triggerElMatch){\n                    return [element, triggerElMatch, action];\n                }\n                if(element.matches && element.matches(triggerElMatch)){\n                    return [element, triggerElMatch, action];\n                }\n            }\n\n            element = element.parentNode;\n        }\n        return [null, null, []];\n    }\n\n    static match(element, matchStr){\n        if(element && element.matches){\n            return element.matches(matchStr);\n        }\n        return false;\n    }\n\n    static matches(element, matchObj){\n        if(element && element.matches){\n            for(let m in matchObj){\n                if(matchObj.hasOwnProperty(m) && element.matches(m)){\n                    return [element, m, matchObj[m]];\n                }\n            }\n        }\n        return [null, null, []];\n    }\n\n    //Methods for performing quick sort on objects, allows sorting on various items based on a given key\n    static swap(items, firstIndex, secondIndex){\n        let temp = items[firstIndex];\n        items[firstIndex] = items[secondIndex];\n        items[secondIndex] = temp;\n    }\n\n    static partition(items, itemKey, left, right){\n        let pivot = items[Math.floor((right + left) / 2)][itemKey];\n        let i = left;\n        let j = right;\n\n        while(i <= j){\n            while(items[i][itemKey] < pivot){\n                i++;\n            }\n\n            while(items[j][itemKey] > pivot){\n                j--;\n            }\n\n            if(i <= j){\n                ElementHelper.swap(items, i, j);\n                i++;\n                j--;\n            }\n        }\n        return i;\n    }\n\n    static quickSort(items, itemKey, left, right){\n        let index;\n        if(items.length > 1){\n            left = typeof left !== \"number\" ? 0 : left;\n            right = typeof right !== \"number\" ? items.length-1 : right;\n            index = this.partition(items, itemKey, left, right);\n            if(left < index-1){\n                ElementHelper.quickSort(items, itemKey, left, index-1);\n            }\n            if(index < right){\n                ElementHelper.quickSort(items, itemKey, index, right);\n            }\n        }\n        return items;\n    }\n}", "export default class RequestParameters{\n    static getQueryVariable(variable, preventCollapse) {\n        let query = window.location.search.substring(1);\n        let vars = query.split(\"&\");\n        let returnArray = [];\n\n        for (let i = 0; i < vars.length; i++) {\n            let pair = vars[i].split(\"=\");\n            if (pair[0] === variable) {\n                returnArray.push(decodeURIComponent(pair[1]));\n            }\n        }\n\n        if (returnArray.length === 1 && !preventCollapse) {\n            return returnArray[0];\n        } else if (returnArray.length === 0) {\n            return \"\";\n        } else {\n            return returnArray;\n        }\n    }\n}", "import \"jquery\";\nimport ElementHelper from \"../dom/ElementHelper.js\";\nimport ListenerCollection from \"./ListenerCollection.js\";\nimport NamespacedListenerCollection from \"./NamespacedListenerCollection.js\";\n\nexport default class BaseHighLevelEventHandler{\n    /** The HighLevelEventHandler is a touch/click event tracker that registers once at document level as a single listener\n     * for intercepting click events. It also resolved events against their intended target so that an event firing on a child\n     * element but listened for at an ancestor can provide the listener with that intended ancestor to work with automatically.\n     * @param options An object of configuration options:\n     *  {\n     *      defaultEvent: which event should addListener hook into by default, //Determines whether we listen for click events or touch events\n     *      loadingWarning: function //Which function to trigger in the event it appears that an unhandled anchor is being clicked.\n     *  }\n     */\n\n    constructor(options){\n        this.defaultEvent = options.defaultEvent;\n        this.elementHelper = ElementHelper;\n        this.defaultListenerCollection = new ListenerCollection(this);\n        this.namedListenerCollections = new Map();\n\n        this.debug = options.debug;\n\n        //We can specify in the options a loadWarning to function to fire on the event that we hit a link that looks\n        //like it should have a javascript action associated with it (a link with <a href=\"#\">) to indicate to the\n        //developer that it looks like we have an unregistered event.\n\n        //Should we actually want to a link to # (such as a top of page link) we can specify a null listener on that\n        //element.\n        if(options.loadingWarning){\n            this.loadingWarning = options.loadingWarning;\n        }else{\n            this.loadingWarning = () => {\n                alert(\"Not quite ready! The page is currently loading and this function isn't quite read yet, please try again.\");\n            };\n        }\n\n        this.target = $(options.target);\n        this.eventProcessors = new Map();\n    }\n\n    addListenerGroup(groupName){\n        if(this.namedListenerCollections.has(groupName)){\n            console.warn(`Named Listener Collection ${groupName} already exists`);\n            return this.namedListenerCollections.get(groupName);\n        }\n        const groupCollection = new NamespacedListenerCollection(this, groupName);\n        this.namedListenerCollections.set(groupName, groupCollection);\n        return groupCollection;\n    }\n\n    removeListenerGroup(groupName){\n        if(this.namedListenerCollections.has(groupName)){\n            this.namedListenerCollections.delete(groupName);\n        }\n    }\n\n    //Show debug messaging about registered events when they fire\n    enableDebug(){\n        this.debug = true;\n    }\n\n    //List all the currently registered events for debug purposes\n    list(){\n        console.log(\"Base Listeners:\");\n        console.log(this.defaultListenerCollection.list());\n        console.log(\"Base Listener Collection:\", this.defaultListenerCollection.list());\n        for(const [group, listeners] of this.namedListenerCollections.entries()){\n            console.log(`Plugin Listeners [${group}]:`);\n            console.log(listeners.list());\n        }\n    }\n\n    mergeListeners(...listenerMaps){\n        const activeListeners = new Map();\n        for(const subMap of listenerMaps){\n            if(subMap){\n                for(const item of subMap.entries()){\n                    activeListeners.set(...item);\n                }\n            }\n        }\n        return activeListeners;\n    }\n\n    collateActiveListeners(event){\n        const defaultListeners = this.defaultListenerCollection.listeners.get(event);\n        let activeListeners = this.mergeListeners(defaultListeners);\n        for(const [group, listeners] of this.namedListenerCollections.entries()){\n            const namedListeners = listeners.listeners.get(event);\n            activeListeners = this.mergeListeners(activeListeners, namedListeners);\n        }\n        return activeListeners;\n    }\n\n    /*  Listens for events and the top level and performs any DOM traversal required to accommodate\n        the listener's intended target. */\n    listen(event){\n        /*  We sometimes hit the scenario where not all the events for a page have been registered. This means any\n            javascript trigger links that have been marked up like <a href=\"#\">Thing</a> cause the page to jump to the top.\n            We can remove the href, but then they'd just do nothing instead. This listener, if triggered on such a link,\n            prevents the default action of the event, then goes through its even list looking for a match.\n            If it fails to find one to match said link then it pops up a \"Sorry this isn't loaded yet\" message prompting the user\n            to try again (but it's really more of a guide to the dev that they've missed something).\n         */\n        const processor = (e) => {\n            if(this.debug){\n                console.log(\"HIGH LEVEL EVENT HANDLER firing on \", e);\n            }\n\n            const el = e.target;\n            const $el = $(el);\n\n            /*\n                Check to see if we're looking at a link with a \"#\" href, in which case we know we're dealing with a\n                link that's supposed to trigger a javascript event; Stop them making the page jump if nothing is loaded.\n             */\n            let simpleTopLink = false;\n            if($el.attr(\"href\") === \"#\"){\n                if(this.debug){\n                    console.log(\"HIGH LEVEL EVENT HANDLER suppressing default for empty link \", e);\n                }\n                e.preventDefault();\n                simpleTopLink = true;\n            }\n\n            const activeListeners = this.collateActiveListeners(event);\n            /* From the trigger element work up through the dom until we find a matching event\n               handler, if we find a match return it\n               as well as the list of actions associated with it. */\n            let match = this.elementHelper.parentMatches(el, activeListeners);\n            if(match !== null && match[0] !== null){\n                /*\n                  Check to see if we have a match in the listener list for the object being clicked\n                  by tracking up through the DOM until we find a match. Harvest the details of those\n                  matching elements and pass them alongside the original event to\n                  the registered action function.\n               */\n                $(match[2]).each((i, action) => {\n                    if(this.debug){\n                        console.log(`HIGH LEVEL EVENT HANDLER action Index ${i}`);\n                        console.log(\"HIGH LEVEL EVENT HANDLER performing actions for \", match, e);\n                    }\n                    /*  execute the action. Listeners registered with this system should expect two\n                        arguments (a, args) the first being the original event, the second being a\n                        collection of pre-prepared elements containing the original e.target element\n                        and its jquery extended version as well as the matched element and\n                        its jquery extended version and the string user to match the element. */\n                    action(e, {\n                        el: el,\n                        $el: $el,\n                        matchedEl: match[0],\n                        $matchedEl: $(match[0]),\n                        trigger: match[1],\n                        payload: e.detail\n                    });\n                });\n            }else if(simpleTopLink){\n                /*\n                    If we don't find a match, but the clicked element is a link with an href of \"#\" assume something else is supposed to be catching it that\n                    hasn't been loaded yet (this highLevelHandler should load first, so check if there are events registered on the element) in which case just inform people that the page is still loading.\n                 */\n                if(this.debug){\n                    console.log(\"HIGH LEVEL EVENT HANDLER showing not loaded message on simple link \", e);\n                }\n                const ev = $._data(el, 'events');\n                if(!ev || !ev.click){\n                    this.loadingWarning();\n                }\n            }else if(this.debug){\n                /* Otherwise do nothing (or log we're doing nothing) */\n                console.log(\"HIGH LEVEL EVENT HANDLER taking no further action \", e);\n            }\n        }\n\n        if(!this.eventProcessors.has(event)){\n            if(this.debug){\n                console.log(`Establish the listener for ${event} on ${this.target[0]}`);\n            }\n            this.target[0].addEventListener(event, processor);\n            this.eventProcessors.set(event, processor);\n        }\n    }\n}", "import ElementHelper from \"../dom/ElementHelper.js\";\n\nexport const NULL_ACTION = (e) => {\n};\n\nexport default class ListenerCollection{\n    constructor(globalEventHandler){\n        this.eventHandler = globalEventHandler;\n        this.defaultEvent = this.eventHandler.defaultEvent;\n        this.listeners = new Map();\n    }\n\n    //Add a listener for a specific element and a corresponding action to take\n    addListener(targetMatch, action){\n        this.addListenerOnEvent(this.defaultEvent, targetMatch, action);\n    }\n\n    addNullListenerOnEvent(event, targetMatch){\n        /* Add a null listener, used to allow elements within elements to invoke default behaviour when their parent has a listener present */\n        this.addListenerOnEvent(event, targetMatch, NULL_ACTION);\n    }\n\n    //Add a null listener. This will suppress any load warnings while not altering behavior.\n    addNullListener(targetMatch){\n        /* Add a null listener, used to allow elements within elements to invoke default behaviour when their parent has a listener present */\n        this.addListener(targetMatch, NULL_ACTION);\n    }\n\n    addWindowListener(event, action){\n        this.addListenerOnEvent(event, window, action);\n    }\n\n    addListenerOnEvent(event, targetMatch, action){\n        if(targetMatch instanceof HTMLElement){\n            let meId = targetMatch.getAttribute(\"data-maliceventid\");\n            if(meId == null){\n                meId = `meid-${ElementHelper.guid()}`;\n                targetMatch.setAttribute(\"data-maliceventid\", meId);\n            }\n            targetMatch = `${targetMatch.tagName}[data-maliceventid=${meId}]`;\n        }\n\n        if(this.listeners.has(event)){\n            if(this.listeners.get(event).has(targetMatch)){\n                this.listeners.get(event).get(targetMatch).push(action);\n            }else{\n                this.listeners.get(event).set(targetMatch, [action]);\n            }\n        }else{\n            this.listeners.set(event, new Map());\n            this.listeners.get(event).set(targetMatch, [action]);\n        }\n\n        this.eventHandler.listen(event);\n    }\n\n    clearListeners(listenerTarget){\n        this.clearListenersOnEvent(this.defaultEvent, listenerTarget);\n    }\n\n    clearListenersOnEvent(event, listenerTarget){\n        if(this.listeners.has(event) && this.listeners.get(event).has(listenerTarget)){\n            this.listeners.get(event).delete(listenerTarget);\n        }\n    }\n\n    trigger(eventName, data){\n        this.triggerWithTarget(this.eventHandler.target[0], eventName, data);\n    }\n\n    triggerWithTarget(target, eventName, data){\n        let event = new CustomEvent(eventName, {bubbles: true, detail: data});\n        target.dispatchEvent(event);\n    }\n\n    list(){\n        let repr = [];\n        for(const [event, targets] of this.listeners.entries()){\n            repr.push(`Event: ${event}`);\n            for(let [target, actions] of targets.entries()){\n                repr.push(target, actions);\n            }\n        }\n        return repr;\n    }\n\n    logList(){\n        console.log(this.list());\n    }\n\n    textList(){\n        return this.list().join(\"\\n\");\n    }\n}", "import ListenerCollection from \"./ListenerCollection.js\";\n\nexport default class NamespacedListenerCollection extends ListenerCollection {\n    constructor(globalEventHandler, groupName){\n        super(globalEventHandler);\n        this.groupName = groupName;\n    }\n}", "import \"jquery\";\nimport BaseHighLevelEventHandler from \"./BaseHighLevelEventHandler.js\";\nexport default class HighLevelEventHandler extends BaseHighLevelEventHandler {\n    /** The HighLevelEventHandler is a touch/click event tracker that registers once at document level as a single listener\n     * for intercepting click events. It also resolved events against their intended target so that an event firing on a child\n     * element but listened for at an ancestor can provide the listener with that intended ancestor to work with automatically.\n     * @param options An object of configuration options:\n     *  {\n     *      touchscreen: true/false, //Determines whether we listen for click events or touch events by default\n     *      loadingWarning: function //Which function to trigger in the event it appears that an unhandled anchor is being clicked.\n     *  }\n     */\n\n    constructor(options){\n        options.defaultEvent = options.touchscreen ? \"touchstart\" : \"click\";\n        super(options);\n        this.touchscreen = options.touchscreen === true;\n    }\n}", "import \"jquery\";\nimport BaseHighLevelEventHandler from \"./BaseHighLevelEventHandler.js\";\n\nexport default class HighLevelKeyPressEventHandler extends BaseHighLevelEventHandler{\n    /** The HighLevelKeyPressEventHandler is a keypress event tracker that registers once at document level as a single listener\n     * for intercepting key press events.\n     * @param options An object of configuration options:\n     *  {\n     *      target\n     *  }\n     */\n\n    constructor(options){\n        options.defaultEvent = \"keyup\";\n        super(options);\n    }\n\n\n\n\n    //Listens for events and the top level and performs any DOM traversal required to accommodate the the listener's intended\n    //target.\n    /*listen(){\n\n        // Register the event on out intended top level target (this may be at the top, or on some specific container section within the DOM)\n        this.target.on(\"keyup\", function(e){\n            if(this.debug){\n                console.log(\"HIGH LEVEL KEY PRESS EVENT HANDLER firing on \", e);\n            }\n            const el = e.target;\n            const $el = $(el);\n\n            let activeListeners = _.extend({}, this.listeners);\n            for(let group in this.listenerPluginGroups){\n                if(this.listenerPluginGroups.hasOwnProperty(group)){\n                    activeListeners = _.extend(activeListeners, this.listenerPluginGroups[group].listeners);\n                }\n            }\n\n            //From the trigger element work up through the dom until we find an matching event handler, if we find a match return it\n            // as well as the list of actions associated with it.\n            let match = this.elementHelper.matches(el, activeListeners);\n            if(match !== null && match[0] !== null){\n                $(match[2]).each(function(i, action){\n                    if(this.debug){\n                        console.log(\"HIGH LEVEL KEY PRESS EVENT HANDLER performing actions for \", match, e);\n                    }\n                    //execute the action. Listeners registered with this system should expect two arguments (a, args)\n                    //the first being the original event, the second being a collection of pre-prepared elements containing\n                    //the original e.target element and its jquery extended version as well as the matched element and\n                    //its jquery extended version and the string user to match the element.\n                    action(e, {el: el, $el: $el, matchedEl: match[0], $matchedEl: $(match[0]), trigger: match[1]});\n                }.bind(this));\n            }else if(this.debug){\n                console.log(\"HIGH LEVEL EVENT HANDLER taking no further action \", e);\n            }\n        }.bind(this));\n    }*/\n}", "import BaseHighLevelEventHandler from \"./BaseHighLevelEventHandler.js\";\nimport HighLevelEventHandler from \"./HighLevelEventHandler.js\";\nimport HighLevelKeyPressEventHandler from \"./HighLevelKeyPressEventHandler.js\";\n\n\nconst DEFAULT_OPTIONS = {target: window};\n\n const hookupOfType = (handlerClazz, options) => {\n    if(!window.eventHandler){\n        window.eventHandler = new handlerClazz(options);\n    }\n}\n\nconst hookup = () => {\n     hookupOfType(HighLevelEventHandler, DEFAULT_OPTIONS);\n}\n\nconst grabHandler = () => {\n    if(window.eventHandler){\n        return window.eventHandler.defaultListenerCollection;\n    }\n    throw \"BaseHighLevelEventHandler has not been instantiated, or is not present at the expected location. Instantiate the \" +\n    \" handler by calling BaseHighLevelEventHandler.hookup({options})\";\n}\n\nconst grabGlobalHandler = () => {\n    if(window.eventHandler){\n        return window.eventHandler;\n    }\n    throw \"BaseHighLevelEventHandler has not been instantiated, or is not present at the expected location. Instantiate the \" +\n    \" handler by calling BaseHighLevelEventHandler.hookup({options})\";\n}\n\nconst handlerOfType = (handlerClazz, options, groupName) => {\n    hookupOfType(handlerClazz, options);\n    if(groupName){\n        return grabGlobalHandler().addListenerGroup(groupName);\n    }\n    return grabHandler();\n}\n\nconst handler = (groupName) => {\n    return handlerOfType(HighLevelEventHandler, DEFAULT_OPTIONS, groupName);\n}\n\nconst dropHandler = (groupName) => {\n     if(groupName) {\n         grabGlobalHandler().removeListenerGroup(groupName);\n     }else{\n         window.eventHandler = null;\n     }\n}\n\n\nexport {\n    BaseHighLevelEventHandler,\n    HighLevelEventHandler,\n    HighLevelKeyPressEventHandler,\n    handler,\n    dropHandler,\n    handlerOfType,\n    grabGlobalHandler,\n    grabHandler,\n    hookupOfType,\n    hookup\n};", "import BaseClass from \"./BaseClass.js\";\n\nexport default class ListeningClass extends BaseClass{\n    constructor(options){\n        super(options);\n        this.configure(options);\n    }\n\n    trigger(eventName, data){\n        let event = new CustomEvent(eventName, {detail: data});\n        window.dispatchEvent(event);\n    }\n\n    on(event, handler){\n        window.addListener(event, handler);\n    }\n\n    off(event){\n        window.removeEventListener(event);\n    }\n}", "import \"jquery\";\nimport \"jquery-ui\";\nimport _ from \"underscore\";\nimport ConfirmationTemplate from \"./templates/ConfirmationModalHTML.js\";\n\nexport default class ConfirmationModal{\n    constructor(modalOptions, actions){\n        this.actions = actions;\n        this.dialog = null;\n        this.modalOptions = modalOptions;\n\n        let evaluatedTemplate = $(_.template(ConfirmationTemplate)({modal: this.modalOptions}));\n        $(\"body\").append(evaluatedTemplate);\n\n        let options = {\n            autoOpen: false,\n            modal: true,\n            buttons: {\n                \"Yes\": function() {\n                    if(this.actions.yes){\n                        this.actions.yes();\n                    }\n                    this.close();\n                }.bind(this),\n                \"No\": function() {\n                    if(this.actions.no){\n                        this.actions.no();\n                    }\n                    this.close();\n                }.bind(this)\n            },\n            close: function(){\n            }.bind(this)\n        };\n\n        options = _.extend(options, this.modalOptions);\n        this.dialog = evaluatedTemplate.dialog(options);\n    }\n\n    open(){\n        this.dialog.dialog(\"open\");\n    }\n\n    close(){\n        this.dialog.dialog(\"close\");\n        if(this.modalOptions && this.modalOptions.transient){\n            this.dialog.remove();\n        }\n    }\n};\n", "const ConfirmationTemplate = \"<section id=\\\"<%- modal.id %>\\\" class=\\\"<%- modal.class %> form modal\\\" title=\\\"<%- modal.title %>\\\">\" +\n    \"<div class=\\\"content\\\"><%= modal.content %></div>\" +\n\"</section>\";\n\nexport default ConfirmationTemplate;\n", "import \"jquery\";\nimport _ from \"underscore\";\nimport ListeningClass from \"../classes/ListeningClass.js\";\n\nexport default class SortableTableView extends ListeningClass{\n    constructor(){\n        super();\n        this.targetTableTimeouts = {};\n        this.targetTables = $(\"table.sortable\");\n        this.paginationSelectorMatch = \"select.pagination-manager\";\n\n        //Add page handling for selectors.\n        let url = new URL(window.location.href);\n        let page = url.searchParams.get(\"page\");\n        if(page){\n            $(this.paginationSelectorMatch).val(page);\n        }\n\n        this.addListeners();\n    }\n\n    addListeners(){\n        this.targetTables.each((i, table) => {\n            this.targetTableTimeouts[i] = null;\n            let filterTarget = $(\"#\" + $(table).data(\"filterinput\"));\n            filterTarget.on(\"keydown\", () => {\n                this.listenForFilter(filterTarget, table, i);\n            });\n            this.sorter(table);\n        });\n    }\n\n    sorter(table){\n        let $table = $(table);\n        const clicker = (table, $table) => {\n            return (e) => {\n                let el = e.target;\n                let thEl = this.elementHelper.findParentTag(el, \"TH\");\n                if(thEl && thEl.hasClass(\"sortable\")){\n                    let $el = $(thEl);\n                    if(!$el.hasClass(\"no-sorting\")){\n                        let direction = \"down\";\n\n                        if($el.hasClass(\"down\")){\n                            direction = \"up\";\n                        }\n\n                        $table.find(\"thead th\").removeClass(\"up\");\n                        $table.find(\"thead th\").removeClass(\"down\");\n                        $el.addClass(direction);\n\n                        let column = -1;\n                        let i = 0;\n                        for(let th of $table.find(\"thead th\")){\n                            if(!$(th).hasClass(\"no-data\")){\n                                if(th === el){\n                                    column = i;\n                                    break;\n                                }\n                                i++;\n                            }\n                        }\n\n                        this.sortTable($table, direction, column);\n                    }\n                }\n            };\n        };\n\n        $table.find(\"thead th\").on(\"click\", clicker(table, $table));\n        $table.on(\"change\", (e) => {\n            if(e.target.matches(this.paginationSelectorMatch)){\n                let url = new URL(window.location.href);\n                url.searchParams.set(\"page\", $(e.target).val());\n                window.location.href = url.href;\n            }\n        });\n    }\n\n    sortTable(table, direction, column){\n        let $th = $(table.find(\"th\")[column]);\n        let sortingValues = [];\n        let rows = table.find(\"tr\");\n\n        rows = rows.filter((i, row) => {\n            let tbody = this.elementHelper.findParentTag(row, \"TBODY\");\n            return this.elementHelper.findParentTag(row, \"TABLE\") === table[0] && tbody !== null;\n        });\n\n        //Loop over the rows to create a sortable list\n        for(let i = 0; i < rows.length; i++){\n            let thisColumn = rows[i].getElementsByTagName(\"TD\")[column];\n            let $thisColumn = $(thisColumn);\n\n            //Check if we need to do anything different or if we can just use the td content\n            if($th.hasClass(\"date-sortable\")){\n                sortingValues.push([i, $thisColumn.data(\"datesorting\")]);\n            }else if($th.hasClass(\"alt-text\")){\n                sortingValues.push([i, $thisColumn.data(\"alttext\")]);\n            }else if($th.hasClass(\"numeric\")){\n                sortingValues.push([i, parseInt(thisColumn.innerHTML.toLowerCase(), 10)]);\n            }else{\n                sortingValues.push([i, thisColumn ? thisColumn.innerHTML.toLowerCase() : \"\"]);\n            }\n        }\n\n        this.elementHelper.quickSort(sortingValues, 1);\n\n        if(direction === \"down\"){\n            sortingValues.reverse();\n        }\n\n        let tbodyAlt = [];\n        if(rows.length > 0){\n            let tbody = $(rows[0].parentNode);\n            for(let i = 0; i < sortingValues.length; i++){\n                tbodyAlt.push($(rows[sortingValues[i][0]]).clone(true));\n            }\n            $(rows).remove();\n            for(let i = 0; i < tbodyAlt.length; i++){\n                tbody.append(tbodyAlt[i]);\n            }\n        }\n    }\n\n    listenForFilter(filterTarget, tableElements, index){\n        if(this.targetTableTimeouts[index] !== null){\n            clearTimeout(this.targetTableTimeouts[index]);\n        }\n        this.targetTableTimeouts[index] = setTimeout(() => {\n            this.filter(tableElements, filterTarget.val());\n        }, 200);\n    }\n\n    filter(table, searchText){\n        let $table = $(table);\n        let tableElements = $table.find(\"tbody tr\");\n        searchText = searchText.toLowerCase();\n        tableElements.removeClass(\"inline-data\");\n        this.trigger(\"sortableTable.filter\", {text: searchText});\n        _.each(tableElements, function(e){\n            let $e = $(e);\n            let $subEls = $e.find(\".searchable\");\n            if(searchText){\n                let found = false;\n                //Allow for an alttext data attribute\n                for(let el of $subEls){\n                    let $el = $(el);\n                    if($el.hasClass(\"alt-text\")){\n                        let test = $(el).data(\"alttext\");\n                        if(test && test.toLowerCase().indexOf(searchText) >= 0){\n                            found = true;\n                        }\n                    }\n                }\n                if($subEls.text().toLowerCase().indexOf(searchText) >= 0){\n                    found = true;\n                }\n                if(!found){\n                    $e.addClass(\"inline-data\");\n                }\n            }\n        });\n    }\n}", "import \"jquery\";\nimport _ from \"underscore\";\nimport ElementHelper from \"../dom/ElementHelper.js\";\nimport {handler, dropHandler} from \"../events/index.js\";\n\nexport default class FormHandler{\n    constructor(options){\n        this.formElement = $(options.form);\n        this.formDefaults = options.formDefaults != null ? options.formDefaults : {};\n        this.autoHiddenReset = options.autoHiddenReset != null ? options.autoHiddenReset : true;\n        this.formSubmitRepression = options.formSubmitRepression != null ? options.formSubmitRepression : true;\n\n        this.inputRows = null;\n        this.errorReference = null;\n        this.inputReference = null;\n        this.formLocked = false;\n        this.isDirty = false;\n\n        this.elementHelper = ElementHelper;\n        this.formEventGroupName = ElementHelper.namespacedGuid(\"form\");\n        this.eventHandler = handler(this.formEventGroupName);\n\n        this.formInitialPrepare(options);\n    }\n\n    formInitialPrepare(options){\n        this.formBespokeSetup(options);\n        this.configureFormAutocomplete(options);\n        this.setupFormDataAndErrorHandling(options);\n        this.formInteractivityInit(options);\n    }\n\n    formBespokeSetup(options){\n\n    }\n\n    trigger(eventName, data){\n        if(data == null){\n            data = null;\n        }\n        this.eventHandler.triggerWithTarget(this.formElement[0], eventName, data);\n    }\n\n    on(event, handler){\n        this.eventHandler.addListenerOnEvent(event, this.formElement[0], handler);\n    }\n\n    off(event){\n        this.eventHandler.clearListenersOnEvent(event, this.formElement[0]);\n    }\n\n    clearAllListeners(){\n        dropHandler(this.formEventGroupName);\n        this.formEventGroupName = ElementHelper.guid();\n        this.eventHandler = handler(this.formEventGroupName);\n    }\n\n    buildInputReference(formElement){\n        let inputReference = {};\n        formElement.find(\"input,select,textarea\").each(function (i, e){\n            if($(e).attr(\"type\") !== \"submit\") {\n                inputReference[$(e).attr(\"name\")] = {tag: e.tagName, type: $(e).attr(\"type\"), id: $(e).id};\n            }\n        }.bind(this));\n\n        formElement.find(\"input[type=hidden]\").each(function (i, e){\n            inputReference[$(e).attr(\"name\")] = {tag: e.tagName, type: $(e).attr(\"type\"), id: $(e).attr(\"id\")};\n        }.bind(this));\n\n        formElement.find(\"div[contenteditable]\").each(function(i, e){\n            inputReference[$(e).data(\"name\")] = {tag: e.tagName, type: \"contenteditable\", id: $(e).attr(\"id\")};\n        }.bind(this));\n\n        return inputReference;\n    }\n\n    buildErrorReference(formElement){\n        let errorReference = {};\n        errorReference.globalErrors = formElement.find(\".global-errors\");\n        let inputRows = formElement.find(\".input-row\");\n        inputRows.each((i, e) => {\n            let $el = $(e);\n            let name = $el.data(\"errorname\");\n            errorReference[name] = $el;\n        });\n        return {inputRows: inputRows, errorReference: errorReference};\n    }\n\n    configureFormAutocomplete(options){\n        if(!options || !options.enableAutoComplete){\n            this.formElement.prop(\"autocomplete\", \"off\");\n        }\n    }\n\n    reconfigureInputs(){\n        const references = this.buildErrorReference(this.formElement);\n        this.errorReference = references.errorReference;\n        this.inputRows = references.inputRows;\n        this.inputReference = this.buildInputReference(this.formElement);\n    }\n\n    setupFormDataAndErrorHandling(options){\n        //Instantiate these here to avoid having them shared between instances\n        this.reconfigureInputs();\n\n        if(this.formSubmitRepression) {\n            this.off(\"submit\");\n            this.on(\"submit\", (e) => {\n                e.preventDefault();\n                if(!this.isLocked()) {\n                    this.lock();\n                    this.trigger(\"form:submitted\");\n                }\n            });\n        }\n\n        if(!this.formElement.hasClass(\"formErrors\")) {\n            this.reset();\n        }\n\n        this.on(\"click\", (e) => {\n            let target = e.target;\n            if(this.elementHelper.match(target, \"input\") || this.elementHelper.match(target, \"textarea\") ||\n                this.elementHelper.match(target, \"select\") || this.elementHelper.match(target, \"option\")){\n                this.isDirty = true;\n            }\n        });\n    }\n\n    dirty(){\n        return this.isDirty;\n    }\n\n    makeClean(){\n        this.isDirty = false;\n        this.extraTidyUp();\n    }\n\n    extraTidyUp(){\n        //Override this in subclasses\n    }\n\n    formInteractivityInit(options){\n        //Override this in subclasses\n    }\n\n    flashForm(){\n        this.formElement.fadeTo(100, 0.3, function(){ $(this).fadeTo(500, 1.0); });\n        this.trigger(\"form:flashed\");\n    }\n\n    emptyErrorsFromElement(formElement, inputRows){\n        inputRows.find(\"div.error\").empty();\n        formElement.find(\".global-errors\").empty();\n        inputRows.removeClass(\"hasError\");\n        formElement.removeClass(\"form-error\");\n    }\n\n    emptyErrors(){\n        this.emptyErrorsFromElement(this.formElement, this.inputRows);\n    }\n\n    resetExtensions(){\n        //Override this to perform addition actions on reset\n    }\n\n    reset(){\n        this.formElement[0].reset();\n        //Arg reset doesn't clear hidden fields, so make sure our implementation does.\n        if(this.autoHiddenReset){\n            this.formElement.find(\"input[type=hidden]\").each((i, e) => {\n                $(e).val(\"\");\n            });\n        }\n        this.isDirty = false;\n        this.emptyErrors();\n        this.resetExtensions();\n        this.setFormData(this.formDefaults);\n        this.unlock();\n        this.trigger(\"form:reset\");\n    }\n\n    errorExtensions(errorData){\n        //Override this to perform additional actions on error\n    }\n\n    addErrorsFromElement(errorData, formElement, inputRows, errorReference){\n        this.emptyErrorsFromElement(formElement, inputRows);\n\n        if(errorData) {\n            formElement.addClass(\"formErrors\");\n\n            if(errorData.global_errors) {\n                let errors = errorData.global_errors.join(\"<br />\");\n                errorReference.globalErrors.addClass(\"hasError\");\n                errorReference.globalErrors.html(errors);\n            }\n\n            if(errorData.errors){\n                for(let fieldName in errorData.errors) {\n                    if(errorData.errors.hasOwnProperty(fieldName)) {\n                        this.addError(formElement, errorReference, fieldName, errorData.errors[fieldName]);\n                    }\n                }\n            }\n        }else{\n            //An unspecified error occurred\n            errorReference.globalErrors.addClass(\"hasError\");\n            errorReference.globalErrors.append(\"<p>An unexpected error has occurred</p>\");\n        }\n    }\n\n    addErrors(errorData){\n        this.addErrorsFromElement(errorData, this.formElement, this.inputRows, this.errorReference);\n\n        if(errorData) {\n            this.errorExtensions(errorData);\n        }else{\n            //An unspecified error occurred\n            this.errorReference.globalErrors.addClass(\"hasError\");\n            this.errorReference.globalErrors.append(\"<p>An unexpected error has occurred</p>\");\n        }\n\n        this.flashForm();\n        this.trigger(\"form:formErrors\", errorData);\n        this.unlock();\n    }\n\n    addError(formElement, errorReference, fieldName, errorText){\n        formElement.addClass(\"formErrors\");\n        let t = errorReference[fieldName];\n        if(t){\n            t.addClass(\"hasError\");\n            t.find(\"div.error\").empty().append(errorText);\n        }\n        this.trigger(\"form:addError\", fieldName, errorText);\n    }\n\n    removeError(errorReference, fieldName){\n        let t = errorReference[fieldName];\n        if(t){\n            t.removeClass(\"hasError\");\n            t.find(\"div.error\").empty();\n        }\n    }\n\n    setFormData(data, silent) {\n        this.setFormDataFromElement(this.inputReference, this.formElement, this.formDefaults, this.dataIn(data), silent);\n    }\n\n    setFormDataFromElement(inputReference, formElement, formDefaults, data, silent){\n        let formData = {};\n\n        if(formDefaults !== null && formDefaults !== undefined){\n            formData = _.extend({}, formDefaults);\n        }\n\n        formData = _.extend(formData, data);\n\n        for(let fieldName in formData){\n            if(formData.hasOwnProperty(fieldName)){\n                this.setFieldDataFromElement(fieldName, inputReference, formElement, formData[fieldName], silent);\n            }\n        }\n\n        if(!silent) {\n            this.trigger(\"form:setFormData\", formData);\n        }\n    }\n\n    setFieldData(fieldData, value, silent){\n        this.setFieldDataFromElement(fieldData, this.inputReference, this.formElement, value, silent);\n    }\n\n    setFieldDataFromElement(fieldName, inputReference, formElement, value, silent){\n        let meta = inputReference[fieldName];\n        if(meta){\n            let target = formElement.find(meta.tag + \"[name=\" + fieldName + \"]\");\n            switch (meta.tag) {\n                case \"INPUT\":\n                    switch (meta.type) {\n                        case \"checkbox\":\n                            if(Array.isArray(value)){\n                                target.each(function(i, e) {\n                                    let $e = $(e);\n                                    if (_.contains(value, \"\" + $e.val())) {\n                                        $e.prop(\"checked\", true);\n                                    }else{\n                                        $e.prop(\"checked\", false);\n                                    }\n                                });\n                            }else if(value){\n                                target.prop(\"checked\", true);\n                            }else{\n                                target.prop(\"checked\", false);\n                            }\n                            break;\n\n                        case \"text\":\n                            target.val(value);\n                            break;\n                        case \"radio\":\n                            target.each(function(i, e){\n                                //console.log(\"IN RADIO CHECK\", value);\n                                let $e = $(e);\n                                if (_.contains(value, \"\" + $e.val()) || value === \"\" + $e.val()){\n                                    $e.prop(\"checked\", true);\n                                }else{\n                                    $e.prop(\"checked\", false);\n                                }\n                            });\n                            break;\n                        default:\n                            target.val(value);\n                            break;\n                    }\n                    break;\n\n                case \"SELECT\":\n                    target.val(value);\n                    break;\n                case \"TEXTAREA\":\n                    target.val(value);\n                    break;\n                case \"DIV\":\n                    target.text(value);\n                    break;\n                default:\n                    target.val(value);\n                    break;\n            }\n        }\n        if(!silent) {\n            this.trigger(\"form:setFieldData\", {fieldName: fieldName, value: value});\n        }\n    }\n\n    getFieldDataFromElement(fieldName, inputReference, formElement){\n        let meta = inputReference[fieldName];\n        if(meta){\n            let target = formElement.find(meta.tag + \"[name=\" + fieldName + \"]\");\n            switch(meta.tag){\n                case \"INPUT\":\n                    switch (meta.type) {\n                        case \"checkbox\":\n                            let checkVal;\n                            if(target.attr(\"data-disposition\") === \"singular\"){\n                                if(target.attr(\"value\")){\n                                    checkVal = target.val();\n                                }else{\n                                    checkVal = target[0].checked ? true : false;\n                                }\n                            }else{\n                                checkVal = [];\n                                target.each(function(i, e){\n                                    if(e.checked){\n                                        checkVal.push($(e).val());\n                                    }\n                                });\n                            }\n                            return checkVal;\n                        case \"text\":\n                            return target.val();\n                        case \"radio\":\n                            let val = null;\n                            target.each(function(i, e){\n                                if(e.checked){\n                                    val = $(e).val();\n                                }\n                            });\n                            return val;\n                        default:\n                            return target.val();\n                    }\n                    break;\n\n                case \"SELECT\":\n                    return target.val();\n                case \"TEXTAREA\":\n                    return target.val();\n                case \"DIV\":\n                    return target.html();\n                default:\n                    return target.val();\n            }\n        }\n    }\n\n    getFieldData(fieldName){\n        return this.getFieldDataFromElement(fieldName, this.inputReference, this.formElement);\n    }\n\n    getFormData() {\n        let rawData = {};\n        for(let fieldName in this.inputReference){\n            rawData[fieldName] = this.getFieldData(fieldName);\n        }\n        return this.dataOut(rawData);\n    }\n\n    dataIn(data) {\n        return data;\n    }\n\n    dataOut(rawData) {\n        return rawData;\n    }\n\n    isLocked(){\n        return this.formLocked;\n    }\n\n    lock(){\n        this.formLocked = true;\n        this.trigger(\"form:locked\");\n    }\n\n    unlock(){\n        this.formLocked = false;\n        this.trigger(\"form:unlocked\");\n    }\n\n    disableFields(fields){\n        $(fields).each(function(i, e){\n            $(e).prop(\"disabled\", true);\n        });\n    }\n\n    enableFields(fields){\n        $(fields).each(function(i, e){\n            $(e).prop(\"disabled\", false);\n        });\n    }\n\n    yesOrNoToBoolean(dataIn, dataOut, fieldName){\n        if(dataIn[fieldName] && dataIn[fieldName] === 'yes'){\n            dataOut[fieldName] = true;\n        }else{\n            dataOut[fieldName] = false;\n        }\n    }\n\n    booleanToYesOrNo(dataIn, dataOut, fieldName){\n        if(dataIn[fieldName]){\n            dataOut[fieldName] = [\"yes\"];\n        }else{\n            dataOut[fieldName] = [\"no\"];\n        }\n    }\n\n    onOrOffToBoolean(dataIn, dataOut, fieldName){\n        if(dataIn[fieldName] && dataIn[fieldName][0] === 'on'){\n            dataOut[fieldName] = true;\n        }else{\n            dataOut[fieldName] = false;\n        }\n    }\n};\n", "import FormHandler from \"./FormHandler.js\";\n\nexport default class BasicForm extends FormHandler{\n    constructor(options){\n        super(options);\n    }\n\n    formInteractivityInit(){\n        //Override this in subclasses to add any form-specific reactive behaviour\n    }\n\n    dataIn(data){\n        return data;\n    }\n\n    dataOut(rawData){\n        return rawData;\n    }\n};\n", "import \"jquery\";\nimport _ from \"underscore\";\nimport FormHandler from \"./FormHandler.js\";\nimport ElementHelper from \"../dom/ElementHelper.js\";\n\nexport default class FormHandlerWithGenerators extends FormHandler{\n    constructor(options){\n        super(options);\n    }\n\n    formInitialPrepare(options){\n        this.formBespokeSetup(options);\n        this.configureFormAutocomplete(options);\n\n        this.generators = [];\n        this.generatorAdd();\n\n        this.setupFormDataAndErrorHandling(options);\n        this.on(\"form:reset\", (e) => {\n            console.log(\"RESET GENERATORS\");\n            $(this.generators).each((i, g) => {\n                g.generatorRowStore.empty();\n            });\n        });\n\n        this.formInteractivityInit(options);\n    }\n\n    unescapeTemplate(template){\n        let e = document.createElement('textarea');\n        e.innerHTML = template;\n        let templateUnescaped = e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n        $(e).remove();\n        return templateUnescaped;\n    }\n\n    generatorAdd(){\n        let generatorCollections = this.formElement.find(\".generator\");\n        $(generatorCollections).each((i, generator) => {\n            let $generator = $(generator);\n            let template = this.unescapeTemplate($generator.data(\"template\"));\n            let generatorID = ElementHelper.guid();\n            $generator.attr(\"data-generatedid\", generatorID);\n\n            let augmentedGenerator = {\n                generator: $generator,\n                generatorId: generatorID,\n                generatorRowStore: $generator.find(\".generator_rows\"),\n                generatorIndex: i,\n                templateRow: _.template(template)\n            };\n\n            this.generators.push(augmentedGenerator);\n            this.eventHandler.addListener(`.generator[data-generatedid=\"${generatorID}\"] button`,  (e, args) => {\n                    e.preventDefault();\n                    this.generatorHandler(augmentedGenerator, args.matchedEl);\n            });\n        });\n    }\n\n    generatorHandler(augmentedGenerator, target){\n        if(target.matches(\"button.add-row\")){\n            this.generatorAddRowButtonHandler(augmentedGenerator, target, this.elementHelper.guid());\n        }else if(target.matches(\"button.delete-row\")){\n            this.generatorDeleteRowButtonHandler(augmentedGenerator, target);\n        }else{\n            this.generatorOtherButtonHandler(augmentedGenerator, target);\n        }\n    }\n\n    generatorAddRowButtonHandler(augmentedGenerator, target, id){\n        augmentedGenerator.generatorRowStore.append(augmentedGenerator.templateRow({id: id}));\n    }\n\n    generatorDeleteRowButtonHandler(augmentedGenerator, target){\n         let div = this.elementHelper.findParentByMatch(target, \"div.generator-input-row\");\n         if(div !== null){\n             $(div).remove();\n         }\n    }\n\n    generatorOtherButtonHandler(augmentedGenerator, target){\n\n    }\n\n    addErrors(errorData){\n        this.addErrorsFromElement(errorData, this.formElement, this.inputRows, this.errorReference);\n\n        $(this.generators).each((i, generator) => {\n            let ref = this.buildErrorReference(generator.generator);\n            this.addErrorsFromElement(errorData, generator.generator, ref.inputRows, ref.errorReference);\n        });\n\n        if(errorData) {\n            this.errorExtensions(errorData);\n        }else{\n            //An unspecified error occurred\n            this.errorReference.globalErrors.addClass(\"hasError\");\n            this.errorReference.globalErrors.append(\"<p>An unexpected error has occurred</p>\");\n        }\n\n        this.flashForm();\n        this.trigger(\"form:formErrors\", errorData);\n        this.unlock();\n    }\n\n    emptyErrors(){\n        this.emptyErrorsFromElement(this.formElement, this.inputRows);\n        $(this.generators).each((i, generator) => {\n            let ref = this.buildErrorReference(generator.generator);\n            this.emptyErrorsFromElement(generator.generator, ref.inputRows);\n        });\n    }\n\n    findInCollation(collated, collatedObj, key, value, ident){\n        let tuple = null;\n        if(collatedObj.hasOwnProperty(ident)){\n            tuple = collatedObj[ident];\n        }else{\n            collated.push(ident);\n            tuple = {};\n        }\n        tuple.id = ident;\n        tuple[key] = value;\n        collatedObj[ident] = tuple;\n    }\n\n    collateGenerator(generator){\n        let inputs = this.buildInputReference(generator.generator);\n        let collated = [];\n        let collatedObj = {};\n        let preparedData = [];\n        for(let fieldName in inputs){\n            let keyLabel = fieldName.split(\"_\");\n            let ident = keyLabel[keyLabel.length-1];\n            let field = keyLabel.slice(0, keyLabel.length-1).join(\"_\");\n            let val = this.getFieldDataFromElement(fieldName, inputs, generator.generator);\n            this.findInCollation(collated, collatedObj, field, val, ident);\n        }\n        $(collated).each((i, ident)=> {\n            preparedData.push(collatedObj[ident]);\n        });\n        return preparedData;\n    }\n\n    populateGenerator(generator, data){\n        let transpose = {};\n        $(data).each(function(i, entry){\n            this.generatorAddRowButtonHandler(generator, null, entry.id);\n            for(let k in entry){\n                if(entry.hasOwnProperty(k)){\n                    transpose[k + \"_\" + entry.id] = entry[k];\n                }\n            }\n        }.bind(this));\n\n        let inputs = this.buildInputReference(generator.generator);\n        this.setFormDataFromElement(inputs, generator.generatorRowStore, {}, transpose, true);\n    }\n};\n\n", "import FormHandlerWithGenerators from \"./FormHandlerWithGenerators.js\";\n\nexport default class BasicFormWithGenerators extends FormHandlerWithGenerators{\n    constructor(options){\n        super(options);\n    }\n\n    formInteractivityInit(){\n        //Override this in subclasses to add form specific reactive behaviour\n    }\n\n    generatorRowOtherHandler(augmentedGenerator, target){\n        //Override this in subclasses to handle additional row button clicks\n    }\n\n    dataIn(data){\n        return data;\n    }\n\n    dataOut(rawData){\n        return rawData;\n    }\n};\n\n", "import ElementHelper from \"../dom/ElementHelper.js\";\nimport {handler} from \"../events/index.js\";\n\nexport default class Dispatcher{\n    static viewCheckerAndFormatter(availableViewReference, requestedViews, options){\n        let requiredViews = [];\n        for(let v of requestedViews){\n            if(availableViewReference[v]){\n                requiredViews.push({view: availableViewReference[v], label: v, options: options});\n            }\n        }\n        return requiredViews;\n    }\n\n    constructor(config){\n        if(!(config instanceof Object)){\n            throw new Error(\"You must specify a configuration object when creating a Dispatcher\");\n        }\n        if(config.viewPath === undefined){\n            throw new Error(\"You must specify a viewPath in your Dispatcher constructor, these may be null\");\n        }\n\n        this.eventGroupId = ElementHelper.namespacedGuid(\"dispatcher\");\n        this.eventHandler = handler(this.eventGroupId);\n\n        this.target = document.createElement(\"script\", {id: this.eventGroupId});\n        document.body.append(this.target);\n\n        this.viewPath = config.viewPath;\n        this.instantiatedViews = {};\n        this.failedViews = {};\n        this.viewList = [];\n    }\n\n    trigger(eventName, data){\n        this.eventHandler.triggerWithTarget(this.target, eventName, data);\n    }\n\n    on(eventName, action){\n        this.eventHandler.addListenerOnEvent(eventName, this.target, action);\n    }\n\n    requireAndInstantiate(basePath, viewName, viewLabel,  options){\n        import(`${basePath}${viewName}`).then(ViewClass => {\n            this.instantiatedViews[viewLabel] = new ViewClass.default(options);\n            this.trigger(\"dispatcher:viewloaded\", viewLabel);\n        }).catch(err => {\n            this.failedViews[viewLabel] = options;\n            this.trigger(\"dispatcher:viewfailed\", viewLabel);\n            throw err;\n        });\n    }\n\n    requireAndInstantiateView(viewName, viewLabel, options){\n        this.requireAndInstantiate(this.viewPath, viewName, viewLabel, options);\n    }\n\n    requireAndInstantiateViews(viewList){\n        this.viewList = viewList;\n        let loaded = {};\n        let loadedLabels = [];\n        this.on(\"dispatcher:viewloaded\", (e, args) => {\n            let viewLabel = args.payload;\n            loaded[viewLabel] = true;\n            for(let v of loadedLabels){\n                if(!loaded[v]){\n                    return;\n                }\n            }\n            this.trigger(\"dispatcher:allviewsloaded\", viewList);\n        });\n\n        for(let view of this.viewList){\n            loaded[view.label] = false;\n            loadedLabels.push(view.label);\n            this.requireAndInstantiateView(view.view, view.label, view.options);\n        }\n    }\n}\n", "import ElementHelper from \"./dom/ElementHelper.js\";\nimport HighLevelEventHandler from \"./events/HighLevelEventHandler.js\";\nimport ConfirmationModal from \"./modal/ConfirmationModal.js\";\nimport RequestParameters from \"./request/RequestParameters.js\";\nimport BaseClass from \"./classes/BaseClass.js\";\n\nconst dom = {\n    ElementHelper\n};\n\nconst events = {\n    HighLevelEventHandler: HighLevelEventHandler\n};\n\nconst modal = {\n    ConfirmationModal\n};\n\nconst request = {\n    RequestParameters\n};\n\nconst classes = {\n    BaseClass\n};\n\nconst helpers = {\n    dom,\n    events,\n    modal,\n    request,\n    classes\n};\n\nexport default helpers;", "import _ from \"underscore\";\nimport \"jquery\";\n\n\nconst template = _.template(\"<style><%- css %></style>\");\nexport const Styler = function(css_url){\n    if(window && document){\n        fetch(css_url).then(response => {\n            response.text().then(css_text => {\n                let data = {css: css_text};\n                let tag = template(data);\n                $(\"head\").append(tag);\n            });\n        });\n    }\n}\n\nexport const relative_path = function(css_url){\n    let path = new URL(import.meta.url);\n    return path.pathname.replace(\"index.js\", css_url);\n}\n\nexport const formsCSS = function(){\n    Styler(relative_path(\"./forms/forms.css\"));\n}\n\n", "import {formsCSS} from \"./css/index.js\";\n\nconst css = {\n    formsCSS\n};\n\nexport default css;", "import BaseClass from \"./classes/BaseClass.js\";\nimport ListeningClass from \"./classes/ListeningClass.js\";\nimport ElementHelper from \"./dom/ElementHelper.js\";\nimport {handler, dropHandler, BaseHighLevelEventHandler, HighLevelEventHandler, HighLevelKeyPressEventHandler} from \"./events/index.js\";\nimport ConfirmationModal from \"./modal/ConfirmationModal.js\";\nimport SortableTable from \"./htmlhelpers/SortableTable.js\";\nimport {FormHandler, BasicForm, FormHandlerWithGenerators, BasicFormWithGenerators} from \"./forms/index.js\";\nimport Dispatcher from \"./dispatcher/Dispatcher\";\nimport helpers from \"./helpers.js\";\nimport css from \"./css.js\";\n\nexport {\n    ConfirmationModal,\n    SortableTable,\n    ElementHelper,\n    BaseHighLevelEventHandler,\n    HighLevelEventHandler,\n    HighLevelKeyPressEventHandler,\n    handler,\n    dropHandler,\n    FormHandler,\n    BaseClass,\n    ListeningClass,\n    BasicForm,\n    FormHandlerWithGenerators,\n    BasicFormWithGenerators,\n    Dispatcher,\n    helpers,\n    css\n};\n\nconst malicacid = {\n    ConfirmationModal,\n    SortableTable,\n    ElementHelper,\n    BaseHighLevelEventHandler,\n    HighLevelEventHandler,\n    HighLevelKeyPressEventHandler,\n    handler,\n    dropHandler,\n    FormHandler,\n    BaseClass,\n    ListeningClass,\n    BasicForm,\n    FormHandlerWithGenerators,\n    BasicFormWithGenerators,\n    Dispatcher,\n    helpers,\n    css\n};\nexport default malicacid;\n\n"],
  "mappings": "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",
  "names": ["ElementHelper", "_ElementHelper", "s4", "ns", "element", "dataLabel", "tagName", "match", "reversed", "parents", "matchObj", "triggerElMatch", "action", "matchStr", "m", "items", "firstIndex", "secondIndex", "temp", "itemKey", "left", "right", "pivot", "i", "j", "index", "RequestParameters", "variable", "preventCollapse", "vars", "returnArray", "i", "pair", "NULL_ACTION", "e", "ListenerCollection", "globalEventHandler", "targetMatch", "action", "event", "meId", "ElementHelper", "listenerTarget", "eventName", "data", "target", "repr", "targets", "actions", "NamespacedListenerCollection", "ListenerCollection", "globalEventHandler", "groupName", "BaseHighLevelEventHandler", "options", "ElementHelper", "ListenerCollection", "groupName", "groupCollection", "NamespacedListenerCollection", "group", "listeners", "listenerMaps", "activeListeners", "subMap", "item", "event", "defaultListeners", "namedListeners", "processor", "e", "el", "$el", "simpleTopLink", "match", "i", "action", "ev", "HighLevelEventHandler", "BaseHighLevelEventHandler", "options", "HighLevelKeyPressEventHandler", "BaseHighLevelEventHandler", "options", "DEFAULT_OPTIONS", "hookupOfType", "handlerClazz", "options", "grabHandler", "grabGlobalHandler", "handlerOfType", "handlerClazz", "options", "groupName", "hookupOfType", "handler", "HighLevelEventHandler", "DEFAULT_OPTIONS", "dropHandler", "BaseClass", "options", "ElementHelper", "RequestParameters", "handler", "ListeningClass", "BaseClass", "options", "eventName", "data", "event", "handler", "_", "ConfirmationTemplate", "ConfirmationModalHTML_default", "ConfirmationModal", "modalOptions", "actions", "evaluatedTemplate", "_", "ConfirmationModalHTML_default", "options", "_", "SortableTableView", "ListeningClass", "page", "i", "table", "filterTarget", "$table", "clicker", "e", "el", "thEl", "$el", "direction", "column", "th", "url", "$th", "sortingValues", "rows", "row", "tbody", "thisColumn", "$thisColumn", "tbodyAlt", "tableElements", "index", "searchText", "_", "$e", "$subEls", "found", "test", "_", "FormHandler", "options", "ElementHelper", "handler", "eventName", "data", "event", "dropHandler", "formElement", "inputReference", "i", "e", "errorReference", "inputRows", "$el", "name", "references", "target", "errorData", "errors", "fieldName", "errorText", "t", "silent", "formDefaults", "formData", "_", "fieldData", "value", "meta", "$e", "checkVal", "val", "rawData", "fields", "dataIn", "dataOut", "BasicForm", "FormHandler", "options", "data", "rawData", "_", "FormHandlerWithGenerators", "FormHandler", "options", "e", "i", "g", "template", "templateUnescaped", "generatorCollections", "generator", "$generator", "generatorID", "ElementHelper", "augmentedGenerator", "_", "args", "target", "id", "div", "errorData", "ref", "collated", "collatedObj", "key", "value", "ident", "tuple", "inputs", "preparedData", "fieldName", "keyLabel", "field", "val", "data", "transpose", "entry", "k", "BasicFormWithGenerators", "FormHandlerWithGenerators", "options", "augmentedGenerator", "target", "data", "rawData", "Dispatcher", "availableViewReference", "requestedViews", "options", "requiredViews", "v", "config", "ElementHelper", "handler", "eventName", "data", "action", "basePath", "viewName", "viewLabel", "ViewClass", "err", "viewList", "loaded", "loadedLabels", "e", "args", "view", "dom", "ElementHelper", "events", "HighLevelEventHandler", "modal", "ConfirmationModal", "request", "RequestParameters", "classes", "BaseClass", "helpers", "helpers_default", "_", "template", "Styler", "css_url", "response", "css_text", "tag", "relative_path", "formsCSS", "css", "formsCSS", "css_default", "malicacid", "ConfirmationModal", "SortableTableView", "ElementHelper", "BaseHighLevelEventHandler", "HighLevelEventHandler", "HighLevelKeyPressEventHandler", "handler", "dropHandler", "FormHandler", "BaseClass", "ListeningClass", "BasicForm", "FormHandlerWithGenerators", "BasicFormWithGenerators", "Dispatcher", "helpers_default", "css_default", "src_default"]
}
